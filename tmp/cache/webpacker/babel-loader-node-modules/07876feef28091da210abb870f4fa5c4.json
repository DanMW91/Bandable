{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Controller } from \"stimulus\";\nimport consumer from \"../channels/consumer\";\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this = this;\n\n      this.channel = consumer.subscriptions.create({\n        channel: \"BandChatChannel\",\n        id: this.bandChatIdValue\n      }, {\n        received: function received(data) {\n          var firstReplaceData = data.replace(/outgoing/g, 'incoming');\n          var finalReplaceData = firstReplaceData.replace(/sent/g, 'received');\n\n          _this.element.insertAdjacentHTML(\"beforeend\", finalReplaceData);\n\n          _this.formatReceivedMessage();\n        }\n      });\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.channel.unsubscribe();\n    }\n  }, {\n    key: \"formatReceivedMessage\",\n    value: function formatReceivedMessage() {\n      var message = this.element.lastElementChild;\n      var avatar = message.lastElementChild; // const removedAvatar = this.element.removeChild(avatar)\n\n      var removedAvatar = message.removeChild(avatar);\n      message.prepend(removedAvatar);\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\n_default.values = {\n  bandChatId: Number\n};\nexport { _default as default };","map":{"version":3,"sources":["/home/kenscam/code/DanMW91/The-Rehearsal-Room/app/javascript/controllers/band_chat_subscription_controller.js"],"names":["Controller","consumer","channel","subscriptions","create","id","bandChatIdValue","received","data","firstReplaceData","replace","finalReplaceData","element","insertAdjacentHTML","formatReceivedMessage","unsubscribe","message","lastElementChild","avatar","removedAvatar","removeChild","prepend","values","bandChatId","Number"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;;;;;;;;;;;;;WAKE,mBAAU;AAAA;;AACR,WAAKC,OAAL,GAAeD,QAAQ,CAACE,aAAT,CAAuBC,MAAvB,CACb;AAAEF,QAAAA,OAAO,EAAE,iBAAX;AAA8BG,QAAAA,EAAE,EAAE,KAAKC;AAAvC,OADa,EAEb;AAAEC,QAAAA,QAAQ,EAAE,kBAAAC,IAAI,EAAI;AAElB,cAAMC,gBAAgB,GAAGD,IAAI,CAACE,OAAL,CAAa,WAAb,EAA0B,UAA1B,CAAzB;AACA,cAAMC,gBAAgB,GAAEF,gBAAgB,CAACC,OAAjB,CAAyB,OAAzB,EAAkC,UAAlC,CAAxB;;AACA,UAAA,KAAI,CAACE,OAAL,CAAaC,kBAAb,CAAgC,WAAhC,EAA6CF,gBAA7C;;AACA,UAAA,KAAI,CAACG,qBAAL;AACD;AAND,OAFa,CAAf;AAWD;;;WACD,sBAAc;AACd,WAAKZ,OAAL,CAAaa,WAAb;AACD;;;WAED,iCAAwB;AACtB,UAAMC,OAAO,GAAG,KAAKJ,OAAL,CAAaK,gBAA7B;AACA,UAAMC,MAAM,GAAGF,OAAO,CAACC,gBAAvB,CAFsB,CAGtB;;AAEA,UAAME,aAAa,GAAGH,OAAO,CAACI,WAAR,CAAoBF,MAApB,CAAtB;AACAF,MAAAA,OAAO,CAACK,OAAR,CAAgBF,aAAhB;AACD;;;;EA3B4BnB,U;;SACpBsB,M,GAAS;AAAEC,EAAAA,UAAU,EAAEC;AAAd,C","sourcesContent":["import { Controller } from \"stimulus\";\nimport consumer from \"../channels/consumer\";\n\nexport default class extends Controller {\n  static values = { bandChatId: Number }\n\n  connect() {\n    this.channel = consumer.subscriptions.create(\n      { channel: \"BandChatChannel\", id: this.bandChatIdValue },\n      { received: data => {\n\n        const firstReplaceData = data.replace(/outgoing/g, 'incoming');\n        const finalReplaceData= firstReplaceData.replace(/sent/g, 'received')\n        this.element.insertAdjacentHTML(\"beforeend\", finalReplaceData);\n        this.formatReceivedMessage()\n      } }\n    )\n\n  }\n  disconnect () {\n  this.channel.unsubscribe()\n}\n\nformatReceivedMessage() {\n  const message = this.element.lastElementChild\n  const avatar = message.lastElementChild\n  // const removedAvatar = this.element.removeChild(avatar)\n\n  const removedAvatar = message.removeChild(avatar)\n  message.prepend(removedAvatar)\n}\n\n}\n"]},"metadata":{},"sourceType":"module"}